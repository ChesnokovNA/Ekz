#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ekz
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="sr")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void Insertusers(users instance);
    partial void Updateusers(users instance);
    partial void Deleteusers(users instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Ekz.Properties.Settings.Default.srConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<users> users
		{
			get
			{
				return this.GetTable<users>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_user;
		
		private string _lod_user;
		
		private string _pas_user;
		
		private string _rol_user;
		
		private string _fio_user;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_userChanging(int value);
    partial void Onid_userChanged();
    partial void Onlod_userChanging(string value);
    partial void Onlod_userChanged();
    partial void Onpas_userChanging(string value);
    partial void Onpas_userChanged();
    partial void Onrol_userChanging(string value);
    partial void Onrol_userChanged();
    partial void Onfio_userChanging(string value);
    partial void Onfio_userChanged();
    #endregion
		
		public users()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_user", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_user
		{
			get
			{
				return this._id_user;
			}
			set
			{
				if ((this._id_user != value))
				{
					this.Onid_userChanging(value);
					this.SendPropertyChanging();
					this._id_user = value;
					this.SendPropertyChanged("id_user");
					this.Onid_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lod_user", DbType="VarChar(MAX)")]
		public string lod_user
		{
			get
			{
				return this._lod_user;
			}
			set
			{
				if ((this._lod_user != value))
				{
					this.Onlod_userChanging(value);
					this.SendPropertyChanging();
					this._lod_user = value;
					this.SendPropertyChanged("lod_user");
					this.Onlod_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pas_user", DbType="VarChar(MAX)")]
		public string pas_user
		{
			get
			{
				return this._pas_user;
			}
			set
			{
				if ((this._pas_user != value))
				{
					this.Onpas_userChanging(value);
					this.SendPropertyChanging();
					this._pas_user = value;
					this.SendPropertyChanged("pas_user");
					this.Onpas_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rol_user", DbType="VarChar(MAX)")]
		public string rol_user
		{
			get
			{
				return this._rol_user;
			}
			set
			{
				if ((this._rol_user != value))
				{
					this.Onrol_userChanging(value);
					this.SendPropertyChanging();
					this._rol_user = value;
					this.SendPropertyChanged("rol_user");
					this.Onrol_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fio_user", DbType="VarChar(MAX)")]
		public string fio_user
		{
			get
			{
				return this._fio_user;
			}
			set
			{
				if ((this._fio_user != value))
				{
					this.Onfio_userChanging(value);
					this.SendPropertyChanging();
					this._fio_user = value;
					this.SendPropertyChanged("fio_user");
					this.Onfio_userChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
